"deletes a specific Recipe by id
Functionality (DELETE) for specific Recipe endpoint by id"
---
tags:
- "Recipes"
description: "Functionality (DELETE) for specific Recipe endpoint by id"
summary: "Functionality (DELETE) for specific Recipe endpoint by id"
operationId: "Get Recipe by id"
consumes:
  - "application/json"
produces:
- "application/json"
security:
  - TokenHeader: []
parameters:
-   name: "res"
    in: "path"
    description: "ID of Recipe to delete"
    required: true
    type: "integer"
    format: "int64"
-   name: "val"
    in: "path"
    description: "ID of Category to return"
    required: true
    type: "integer"
    format: "int64"
responses:
  200:
    description: |
      "Recipe is successfully deleted <OK>"
    schema:
      $ref: "#/definitions/successfully_get_recipe"
  499:
    description: |
      If the user does not provide an access token
    schema:
      $ref: "#/definitions/No_accesstoken_provided"
  498:
    description: |
      If the user provided a token that does not exist or a token that is expired. The error message is returned in this case
    schema:
      $ref: "#/definitions/Failed_get_category"

  404:
    description: |
      The recipe does not exist
    schema:
      $ref: "#/definitions/Recipe_does_not_exist"

  404:
    description: |
      If the recipe category does not exist
    schema:
      $ref: "#/definitions/None_exist_category"

definitions:
  No_accesstoken_provided:
    type: "object"
    properties:
      Message:
        type: "string"
        default: 'Please Provide an access token'



  # categories

  successfully_get_recipe:
    type: "object"
    properties:
      Message:
        type: 'string'
        default: 'Recipe {} was deleted successfully'

  Failed_get_category:
    type: "object"
    properties:
      Message:
        type: "string"
        default: '<Message containing the error>'

  Recipe_does_not_exist:
    type: "object"
    properties:
      Message:
        type: "string"
        default: 'The recipe does not exist'

  None_exist_category:
    type: "object"
    properties:
      Message:
        type: "string"
        default: 'Category does not exist'